define(['objTools', 'Library', 'xsd'],
function (objTools, Library, xsd) {

var text_basetypesxsd = '<?xml version=\'1.0\'?>\n<xs:schema xmlns:hfp="http://www.w3.org/2001/XMLSchema-hasFacetAndProperty"\n           xmlns:xs="http://www.w3.org/2001/XMLSchema" blockDefault="#all"\n           elementFormDefault="qualified" xml:lang="en"\n           targetNamespace="http://www.w3.org/2001/XMLSchema"\n           version="Id: datatypes.xsd,v 1.4 2004/05/29 10:26:33 ht Exp ">\n  <xs:annotation>\n    <xs:documentation source="../datatypes/datatypes-with-errata.html">\n      The schema corresponding to this document is normative,\n      with respect to the syntactic constraints it expresses in the\n      XML Schema language.  The documentation (within &lt;documentation>\n      elements) below, is not normative, but rather highlights important\n      aspects of the W3C Recommendation of which this is a part\n    </xs:documentation>\n  </xs:annotation>\n  <xs:annotation>\n    <xs:documentation>\n      First the built-in primitive datatypes.  These definitions are for\n      information only, the real built-in definitions are magic.\n    </xs:documentation>\n    <xs:documentation>\n      For each built-in datatype in this schema (both primitive and\n      derived) can be uniquely addressed via a URI constructed\n      as follows:\n        1) the base URI is the URI of the XML Schema namespace\n        2) the fragment identifier is the name of the datatype\n\n      For example, to address the int datatype, the URI is:\n\n        http://www.w3.org/2001/XMLSchema#int\n\n      Additionally, each facet definition element can be uniquely\n      addressed via a URI constructed as follows:\n        1) the base URI is the URI of the XML Schema namespace\n        2) the fragment identifier is the name of the facet\n\n      For example, to address the maxInclusive facet, the URI is:\n\n        http://www.w3.org/2001/XMLSchema#maxInclusive\n\n      Additionally, each facet usage in a built-in datatype definition\n      can be uniquely addressed via a URI constructed as follows:\n        1) the base URI is the URI of the XML Schema namespace\n        2) the fragment identifier is the name of the datatype, followed\n           by a period (".") followed by the name of the facet\n\n      For example, to address the usage of the maxInclusive facet in\n      the definition of int, the URI is:\n\n        http://www.w3.org/2001/XMLSchema#int.maxInclusive\n\n    </xs:documentation>\n  </xs:annotation>\n  <xs:simpleType name="string" id="string">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#string"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace value="preserve" id="string.preserve"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="boolean" id="boolean">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="finite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#boolean"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="boolean.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="float" id="float">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="true"/>\n        <hfp:hasProperty name="cardinality" value="finite"/>\n        <hfp:hasProperty name="numeric" value="true"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#float"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="float.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="double" id="double">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="true"/>\n        <hfp:hasProperty name="cardinality" value="finite"/>\n        <hfp:hasProperty name="numeric" value="true"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#double"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="double.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="decimal" id="decimal">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="totalDigits"/>\n        <hfp:hasFacet name="fractionDigits"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="total"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="true"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#decimal"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="decimal.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="duration" id="duration">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#duration"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="duration.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="dateTime" id="dateTime">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#dateTime"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="dateTime.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="time" id="time">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#time"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="time.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="date" id="date">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#date"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="date.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="gYearMonth" id="gYearMonth">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#gYearMonth"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="gYearMonth.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="gYear" id="gYear">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#gYear"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="gYear.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="gMonthDay" id="gMonthDay">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#gMonthDay"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="gMonthDay.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="gDay" id="gDay">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#gDay"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="gDay.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="gMonth" id="gMonth">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="maxInclusive"/>\n        <hfp:hasFacet name="maxExclusive"/>\n        <hfp:hasFacet name="minInclusive"/>\n        <hfp:hasFacet name="minExclusive"/>\n        <hfp:hasProperty name="ordered" value="partial"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#gMonth"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="gMonth.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="hexBinary" id="hexBinary">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#binary"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="hexBinary.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="base64Binary" id="base64Binary">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#base64Binary"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="base64Binary.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="anyURI" id="anyURI">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#anyURI"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="anyURI.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="QName" id="QName">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#QName"/>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="QName.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="NOTATION" id="NOTATION">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#NOTATION"/>\n      <xs:documentation>\n        NOTATION cannot be used directly in a schema; rather a type\n        must be derived from it by specifying at least one enumeration\n        facet whose value is the name of a NOTATION declared in the\n        schema.\n      </xs:documentation>\n    </xs:annotation>\n    <xs:restriction base="xs:anySimpleType">\n      <xs:whiteSpace fixed="true" value="collapse" id="NOTATION.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:annotation>\n    <xs:documentation>\n      Now the derived primitive types\n    </xs:documentation>\n  </xs:annotation>\n  <xs:simpleType name="normalizedString" id="normalizedString">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#normalizedString"/>\n    </xs:annotation>\n    <xs:restriction base="xs:string">\n      <xs:whiteSpace value="replace" id="normalizedString.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="token" id="token">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#token"/>\n    </xs:annotation>\n    <xs:restriction base="xs:normalizedString">\n      <xs:whiteSpace value="collapse" id="token.whiteSpace"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="language" id="language">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#language"/>\n    </xs:annotation>\n    <xs:restriction base="xs:token">\n      <xs:pattern value="[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"\n                  id="language.pattern">\n        <xs:annotation>\n          <xs:documentation source="http://www.ietf.org/rfc/rfc3066.txt">\n            pattern specifies the content of section 2.12 of XML 1.0e2\n            and RFC 3066 (Revised version of RFC 1766).\n          </xs:documentation>\n        </xs:annotation>\n      </xs:pattern>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="IDREFS" id="IDREFS">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#IDREFS"/>\n    </xs:annotation>\n    <xs:restriction>\n      <xs:simpleType>\n        <xs:list itemType="xs:IDREF"/>\n      </xs:simpleType>\n      <xs:minLength value="1" id="IDREFS.minLength"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="ENTITIES" id="ENTITIES">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#ENTITIES"/>\n    </xs:annotation>\n    <xs:restriction>\n      <xs:simpleType>\n        <xs:list itemType="xs:ENTITY"/>\n      </xs:simpleType>\n      <xs:minLength value="1" id="ENTITIES.minLength"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="NMTOKEN" id="NMTOKEN">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#NMTOKEN"/>\n    </xs:annotation>\n    <xs:restriction base="xs:token">\n      <xs:pattern value="\\c+" id="NMTOKEN.pattern">\n        <xs:annotation>\n          <xs:documentation source="http://www.w3.org/TR/REC-xml#NT-Nmtoken">\n            pattern matches production 7 from the XML spec\n          </xs:documentation>\n        </xs:annotation>\n      </xs:pattern>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="NMTOKENS" id="NMTOKENS">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasFacet name="length"/>\n        <hfp:hasFacet name="minLength"/>\n        <hfp:hasFacet name="maxLength"/>\n        <hfp:hasFacet name="enumeration"/>\n        <hfp:hasFacet name="whiteSpace"/>\n        <hfp:hasFacet name="pattern"/>\n        <hfp:hasProperty name="ordered" value="false"/>\n        <hfp:hasProperty name="bounded" value="false"/>\n        <hfp:hasProperty name="cardinality" value="countably infinite"/>\n        <hfp:hasProperty name="numeric" value="false"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#NMTOKENS"/>\n    </xs:annotation>\n    <xs:restriction>\n      <xs:simpleType>\n        <xs:list itemType="xs:NMTOKEN"/>\n      </xs:simpleType>\n      <xs:minLength value="1" id="NMTOKENS.minLength"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="Name" id="Name">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#Name"/>\n    </xs:annotation>\n    <xs:restriction base="xs:token">\n      <xs:pattern value="\\i\\c*" id="Name.pattern">\n        <xs:annotation>\n          <xs:documentation source="http://www.w3.org/TR/REC-xml#NT-Name">\n            pattern matches production 5 from the XML spec\n          </xs:documentation>\n        </xs:annotation>\n      </xs:pattern>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="NCName" id="NCName">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#NCName"/>\n    </xs:annotation>\n    <xs:restriction base="xs:Name">\n      <xs:pattern value="[\\i-[:]][\\c-[:]]*" id="NCName.pattern">\n        <xs:annotation>\n          <xs:documentation\n               source="http://www.w3.org/TR/REC-xml-names/#NT-NCName">\n            pattern matches production 4 from the Namespaces in XML spec\n          </xs:documentation>\n        </xs:annotation>\n      </xs:pattern>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="ID" id="ID">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#ID"/>\n    </xs:annotation>\n    <xs:restriction base="xs:NCName"/>\n  </xs:simpleType>\n  <xs:simpleType name="IDREF" id="IDREF">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#IDREF"/>\n    </xs:annotation>\n    <xs:restriction base="xs:NCName"/>\n  </xs:simpleType>\n  <xs:simpleType name="ENTITY" id="ENTITY">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#ENTITY"/>\n    </xs:annotation>\n    <xs:restriction base="xs:NCName"/>\n  </xs:simpleType>\n  <xs:simpleType name="integer" id="integer">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#integer"/>\n    </xs:annotation>\n    <xs:restriction base="xs:decimal">\n      <xs:fractionDigits fixed="true" value="0" id="integer.fractionDigits"/>\n      <xs:pattern value="[\\-+]?[0-9]+"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="nonPositiveInteger" id="nonPositiveInteger">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#nonPositiveInteger"/>\n    </xs:annotation>\n    <xs:restriction base="xs:integer">\n      <xs:maxInclusive value="0" id="nonPositiveInteger.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="negativeInteger" id="negativeInteger">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#negativeInteger"/>\n    </xs:annotation>\n    <xs:restriction base="xs:nonPositiveInteger">\n      <xs:maxInclusive value="-1" id="negativeInteger.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="long" id="long">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasProperty name="bounded" value="true"/>\n        <hfp:hasProperty name="cardinality" value="finite"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#long"/>\n    </xs:annotation>\n    <xs:restriction base="xs:integer">\n      <xs:minInclusive value="-9223372036854775808" id="long.minInclusive"/>\n      <xs:maxInclusive value="9223372036854775807" id="long.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="int" id="int">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#int"/>\n    </xs:annotation>\n    <xs:restriction base="xs:long">\n      <xs:minInclusive value="-2147483648" id="int.minInclusive"/>\n      <xs:maxInclusive value="2147483647" id="int.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="short" id="short">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#short"/>\n    </xs:annotation>\n    <xs:restriction base="xs:int">\n      <xs:minInclusive value="-32768" id="short.minInclusive"/>\n      <xs:maxInclusive value="32767" id="short.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="byte" id="byte">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#byte"/>\n    </xs:annotation>\n    <xs:restriction base="xs:short">\n      <xs:minInclusive value="-128" id="byte.minInclusive"/>\n      <xs:maxInclusive value="127" id="byte.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="nonNegativeInteger" id="nonNegativeInteger">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#nonNegativeInteger"/>\n    </xs:annotation>\n    <xs:restriction base="xs:integer">\n      <xs:minInclusive value="0" id="nonNegativeInteger.minInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="unsignedLong" id="unsignedLong">\n    <xs:annotation>\n      <xs:appinfo>\n        <hfp:hasProperty name="bounded" value="true"/>\n        <hfp:hasProperty name="cardinality" value="finite"/>\n      </xs:appinfo>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#unsignedLong"/>\n    </xs:annotation>\n    <xs:restriction base="xs:nonNegativeInteger">\n      <xs:maxInclusive value="18446744073709551615"\n                       id="unsignedLong.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="unsignedInt" id="unsignedInt">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#unsignedInt"/>\n    </xs:annotation>\n    <xs:restriction base="xs:unsignedLong">\n      <xs:maxInclusive value="4294967295" id="unsignedInt.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="unsignedShort" id="unsignedShort">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#unsignedShort"/>\n    </xs:annotation>\n    <xs:restriction base="xs:unsignedInt">\n      <xs:maxInclusive value="65535" id="unsignedShort.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="unsignedByte" id="unsignedByte">\n    <xs:annotation>\n      <xs:documentation source="http://www.w3.org/TR/xmlschema-2/#unsignedByte"/>\n    </xs:annotation>\n    <xs:restriction base="xs:unsignedShort">\n      <xs:maxInclusive value="255" id="unsignedByte.maxInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="positiveInteger" id="positiveInteger">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#positiveInteger"/>\n    </xs:annotation>\n    <xs:restriction base="xs:nonNegativeInteger">\n      <xs:minInclusive value="1" id="positiveInteger.minInclusive"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name="derivationControl">\n    <xs:annotation>\n      <xs:documentation>\n   A utility type, not for public use</xs:documentation>\n    </xs:annotation>\n    <xs:restriction base="xs:NMTOKEN">\n      <xs:enumeration value="substitution"/>\n      <xs:enumeration value="extension"/>\n      <xs:enumeration value="restriction"/>\n      <xs:enumeration value="list"/>\n      <xs:enumeration value="union"/>\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:group name="simpleDerivation">\n    <xs:choice>\n      <xs:element ref="xs:restriction"/>\n      <xs:element ref="xs:list"/>\n      <xs:element ref="xs:union"/>\n    </xs:choice>\n  </xs:group>\n  <xs:simpleType name="simpleDerivationSet">\n    <xs:annotation>\n      <xs:documentation>\n   #all or (possibly empty) subset of {restriction, union, list}\n   </xs:documentation>\n      <xs:documentation>\n   A utility type, not for public use</xs:documentation>\n    </xs:annotation>\n    <xs:union>\n      <xs:simpleType>\n        <xs:restriction base="xs:token">\n          <xs:enumeration value="#all"/>\n        </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType>\n        <xs:list>\n          <xs:simpleType>\n            <xs:restriction base="xs:derivationControl">\n              <xs:enumeration value="list"/>\n              <xs:enumeration value="union"/>\n              <xs:enumeration value="restriction"/>\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:list>\n      </xs:simpleType>\n    </xs:union>\n  </xs:simpleType>\n  <xs:complexType name="simpleType" abstract="true">\n    <xs:complexContent>\n      <xs:extension base="xs:annotated">\n        <xs:group ref="xs:simpleDerivation"/>\n        <xs:attribute name="final" type="xs:simpleDerivationSet"/>\n        <xs:attribute name="name" type="xs:NCName">\n          <xs:annotation>\n            <xs:documentation>\n              Can be restricted to required or forbidden\n            </xs:documentation>\n          </xs:annotation>\n        </xs:attribute>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name="topLevelSimpleType">\n    <xs:complexContent>\n      <xs:restriction base="xs:simpleType">\n        <xs:sequence>\n          <xs:element ref="xs:annotation" minOccurs="0"/>\n          <xs:group ref="xs:simpleDerivation"/>\n        </xs:sequence>\n        <xs:attribute name="name" type="xs:NCName" use="required">\n          <xs:annotation>\n            <xs:documentation>\n              Required at the top level\n            </xs:documentation>\n          </xs:annotation>\n        </xs:attribute>\n        <xs:anyAttribute namespace="##other" processContents="lax"/>\n      </xs:restriction>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name="localSimpleType">\n    <xs:complexContent>\n      <xs:restriction base="xs:simpleType">\n        <xs:sequence>\n          <xs:element ref="xs:annotation" minOccurs="0"/>\n          <xs:group ref="xs:simpleDerivation"/>\n        </xs:sequence>\n        <xs:attribute name="name" use="prohibited">\n          <xs:annotation>\n            <xs:documentation>\n              Forbidden when nested\n            </xs:documentation>\n          </xs:annotation>\n        </xs:attribute>\n        <xs:attribute name="final" use="prohibited"/>\n        <xs:anyAttribute namespace="##other" processContents="lax"/>\n      </xs:restriction>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:element name="simpleType" type="xs:topLevelSimpleType" id="simpleType">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-simpleType"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:group name="facets">\n    <xs:annotation>\n      <xs:documentation>\n       We should use a substitution group for facets, but\n       that\'s ruled out because it would allow users to\n       add their own, which we\'re not ready for yet.\n    </xs:documentation>\n    </xs:annotation>\n    <xs:choice>\n      <xs:element ref="xs:minExclusive"/>\n      <xs:element ref="xs:minInclusive"/>\n      <xs:element ref="xs:maxExclusive"/>\n      <xs:element ref="xs:maxInclusive"/>\n      <xs:element ref="xs:totalDigits"/>\n      <xs:element ref="xs:fractionDigits"/>\n      <xs:element ref="xs:length"/>\n      <xs:element ref="xs:minLength"/>\n      <xs:element ref="xs:maxLength"/>\n      <xs:element ref="xs:enumeration"/>\n      <xs:element ref="xs:whiteSpace"/>\n      <xs:element ref="xs:pattern"/>\n    </xs:choice>\n  </xs:group>\n  <xs:group name="simpleRestrictionModel">\n    <xs:sequence>\n      <xs:element name="simpleType" type="xs:localSimpleType" minOccurs="0"/>\n      <xs:group ref="xs:facets" minOccurs="0" maxOccurs="unbounded"/>\n    </xs:sequence>\n  </xs:group>\n  <xs:element name="restriction" id="restriction">\n    <xs:complexType>\n      <xs:annotation>\n        <xs:documentation\n             source="http://www.w3.org/TR/xmlschema-2/#element-restriction">\n          base attribute and simpleType child are mutually\n          exclusive, but one or other is required\n        </xs:documentation>\n      </xs:annotation>\n      <xs:complexContent>\n        <xs:extension base="xs:annotated">\n          <xs:group ref="xs:simpleRestrictionModel"/>\n          <xs:attribute name="base" type="xs:QName" use="optional"/>\n        </xs:extension>\n      </xs:complexContent>\n    </xs:complexType>\n  </xs:element>\n  <xs:element name="list" id="list">\n    <xs:complexType>\n      <xs:annotation>\n        <xs:documentation\n             source="http://www.w3.org/TR/xmlschema-2/#element-list">\n          itemType attribute and simpleType child are mutually\n          exclusive, but one or other is required\n        </xs:documentation>\n      </xs:annotation>\n      <xs:complexContent>\n        <xs:extension base="xs:annotated">\n          <xs:sequence>\n            <xs:element name="simpleType" type="xs:localSimpleType"\n                        minOccurs="0"/>\n          </xs:sequence>\n          <xs:attribute name="itemType" type="xs:QName" use="optional"/>\n        </xs:extension>\n      </xs:complexContent>\n    </xs:complexType>\n  </xs:element>\n  <xs:element name="union" id="union">\n    <xs:complexType>\n      <xs:annotation>\n        <xs:documentation\n             source="http://www.w3.org/TR/xmlschema-2/#element-union">\n          memberTypes attribute must be non-empty or there must be\n          at least one simpleType child\n        </xs:documentation>\n      </xs:annotation>\n      <xs:complexContent>\n        <xs:extension base="xs:annotated">\n          <xs:sequence>\n            <xs:element name="simpleType" type="xs:localSimpleType"\n                        minOccurs="0" maxOccurs="unbounded"/>\n          </xs:sequence>\n          <xs:attribute name="memberTypes" use="optional">\n            <xs:simpleType>\n              <xs:list itemType="xs:QName"/>\n            </xs:simpleType>\n          </xs:attribute>\n        </xs:extension>\n      </xs:complexContent>\n    </xs:complexType>\n  </xs:element>\n  <xs:complexType name="facet">\n    <xs:complexContent>\n      <xs:extension base="xs:annotated">\n        <xs:attribute name="value" use="required"/>\n        <xs:attribute name="fixed" type="xs:boolean" default="false"\n                      use="optional"/>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name="noFixedFacet">\n    <xs:complexContent>\n      <xs:restriction base="xs:facet">\n        <xs:sequence>\n          <xs:element ref="xs:annotation" minOccurs="0"/>\n        </xs:sequence>\n        <xs:attribute name="fixed" use="prohibited"/>\n        <xs:anyAttribute namespace="##other" processContents="lax"/>\n      </xs:restriction>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:element name="minExclusive" type="xs:facet" id="minExclusive">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-minExclusive"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:element name="minInclusive" type="xs:facet" id="minInclusive">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-minInclusive"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:element name="maxExclusive" type="xs:facet" id="maxExclusive">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-maxExclusive"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:element name="maxInclusive" type="xs:facet" id="maxInclusive">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-maxInclusive"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:complexType name="numFacet">\n    <xs:complexContent>\n      <xs:restriction base="xs:facet">\n        <xs:sequence>\n          <xs:element ref="xs:annotation" minOccurs="0"/>\n        </xs:sequence>\n        <xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>\n        <xs:anyAttribute namespace="##other" processContents="lax"/>\n      </xs:restriction>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:element name="totalDigits" id="totalDigits">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-totalDigits"/>\n    </xs:annotation>\n    <xs:complexType>\n      <xs:complexContent>\n        <xs:restriction base="xs:numFacet">\n          <xs:sequence>\n            <xs:element ref="xs:annotation" minOccurs="0"/>\n          </xs:sequence>\n          <xs:attribute name="value" type="xs:positiveInteger" use="required"/>\n          <xs:anyAttribute namespace="##other" processContents="lax"/>\n        </xs:restriction>\n      </xs:complexContent>\n    </xs:complexType>\n  </xs:element>\n  <xs:element name="fractionDigits" type="xs:numFacet" id="fractionDigits">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-fractionDigits"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:element name="length" type="xs:numFacet" id="length">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-length"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:element name="minLength" type="xs:numFacet" id="minLength">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-minLength"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:element name="maxLength" type="xs:numFacet" id="maxLength">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-maxLength"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:element name="enumeration" type="xs:noFixedFacet" id="enumeration">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-enumeration"/>\n    </xs:annotation>\n  </xs:element>\n  <xs:element name="whiteSpace" id="whiteSpace">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-whiteSpace"/>\n    </xs:annotation>\n    <xs:complexType>\n      <xs:complexContent>\n        <xs:restriction base="xs:facet">\n          <xs:sequence>\n            <xs:element ref="xs:annotation" minOccurs="0"/>\n          </xs:sequence>\n          <xs:attribute name="value" use="required">\n            <xs:simpleType>\n              <xs:restriction base="xs:NMTOKEN">\n                <xs:enumeration value="preserve"/>\n                <xs:enumeration value="replace"/>\n                <xs:enumeration value="collapse"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:attribute>\n          <xs:anyAttribute namespace="##other" processContents="lax"/>\n        </xs:restriction>\n      </xs:complexContent>\n    </xs:complexType>\n  </xs:element>\n  <xs:element name="pattern" id="pattern">\n    <xs:annotation>\n      <xs:documentation\n           source="http://www.w3.org/TR/xmlschema-2/#element-pattern"/>\n    </xs:annotation>\n    <xs:complexType>\n      <xs:complexContent>\n        <xs:restriction base="xs:noFixedFacet">\n          <xs:sequence>\n            <xs:element ref="xs:annotation" minOccurs="0"/>\n          </xs:sequence>\n          <xs:attribute name="value" type="xs:string" use="required"/>\n          <xs:anyAttribute namespace="##other" processContents="lax"/>\n        </xs:restriction>\n      </xs:complexContent>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>';
var XsdLibrary = function (objTools, Library, xsd, basetypesXsd) {
        var xsdLibrary = objTools.make(Library, {
                init: function (defs) {
                    defs = defs || [];
                    var initDefs = [xsd.parseToDom(basetypesXsd)].concat(defs);
                    return new Library().init.call(this, initDefs);
                },
                addItem: function (def, name) {
                    var ns = name || def.documentElement.getAttributeNS(null, 'targetNamespace');
                    var xsdCollection = this.exists(ns) ? this.getItem(ns) : [];
                    xsdCollection.push(def);
                    this.items[ns] = xsdCollection;
                },
                findElement: function (namespace, name) {
                    var xsds = this.getItem(namespace) || [];
                    var element;
                    for (var i = 0, l = xsds.length; i < l; i++) {
                        element = xsd.findElement(xsds[i], name);
                        if (element) {
                            return element;
                        }
                    }
                    return null;
                },
                findTypeByName: function (namespace, name) {
                    var xsds = this.getItem(namespace) || [];
                    var xsdNodes;
                    for (var i = 0, l = xsds.length; i < l; i++) {
                        xsdNode = xsd.findTypeByName(xsds[i], name);
                        if (xsdNode) {
                            return xsdNode;
                        }
                    }
                    return null;
                },
                findTypeDefinitionFromNodeAttr: function (node, typeAttr, typeAttrNS) {
                    var type = xsd.getTypeFromNodeAttr(node, typeAttr, typeAttrNS);
                    return type ? this.findTypeByName(type.namespaceURI, type.name) : null;
                },
                findElementForXmlNode: function (node) {
                    var parents = [];
                    xsd.getFirstFilteredAncestor(node, function (current) {
                        parents.push(current);
                        return xsd.getTypeFromNodeAttr(current, 'type', xsd.xsi);
                    });
                    var xsdNode;
                    _(parents.reverse()).each(function (currParent) {
                        xsdNode = xsdNode ? this.findXsdSubNode(xsdNode, currParent.localName) : this.findTypeDefinitionFromNodeAttr(currParent, 'type', xsd.xsi);
                    }, this);
                    return this.findXsdSubNode(xsdNode, node.localName);
                },
                findElementType: function (elem) {
                    var tdef = xsd.getTypeFromNodeAttr(elem, 'type');
                    return xsd.getEmbeddedType(elem) || this.findTypeByName(tdef.namespaceURI, tdef.name);
                },
                findXsdSubNode: function (xsdNode, name) {
                    if (xsdNode.localName === 'element') {
                        xsdNode = this.findTypeDefinitionFromNodeAttr(xsdNode, 'type') || xsdNode.children[0];
                    }
                    return xsd.findElement(xsdNode, name);
                },
                findRestrictedType: function (node) {
                    var element = _(node.children).find(function (child) {
                            return child.namespaceURI === xsd.xs && child.localName === 'restriction';
                        });
                    console.log(element);
                    return element ? this.findTypeDefinitionFromNodeAttr(element, 'base') : null;
                },
                findBaseTypeFor: function (node) {
                    var curr, base;
                    do {
                        curr = base ? base : node;
                        base = this.findRestrictedType(curr);
                    } while (base);
                    return curr.getAttribute('name');
                }
            });
        return objTools.makeConstructor(function XsdLibrary() {
        }, xsdLibrary);
    }(objTools, Library, xsd, text_basetypesxsd);

	return XsdLibrary;

});